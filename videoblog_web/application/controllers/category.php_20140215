<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Category extends MY_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('category_model', '', TRUE);
        $this->load->library('upload');
        $this->load->library('image_lib');
    }    

    function index()
    {

        $this->data['tpl_name']= "category/view-category.tpl";
        /*$total_rows = $this->category_model->count_category();
        //echo $total_rows;exit;
        $this->data['pagination']['base_url'] = $this->data['base_url'].'category';
        $this->data['pagination']['total_rows'] = $total_rows;
        $this->pagination->initialize($this->data['pagination']); 
        $page = ($this->uri->segment(2)) ? $this->uri->segment(2) : 0;
        $this->data['category']  =  $this->category_model->get_category($this->data['pagination']["per_page"],$page);
        $this->data['create_links'] =  $this->pagination->create_links();
        if($total_rows > 0)
        {
            if($page !=0){
                $end = (($page+$this->data['pagination']['per_page'])/$this->data['pagination']['per_page'])*$this->data['pagination']['per_page'];
                $start = $end - ( $this->data['pagination']['per_page'] -1 );
                if($end > $total_rows)
                $end = $total_rows;            
            }
            else{
                $end = $this->data['pagination']['per_page'];
                if($end > $total_rows)
                    $end = $total_rows;
                $start = 1;
            }
            $this->data['paging_message']  = 'Showing Records '. $start.' to '. $end.' out of '.$total_rows;
        }
        else
        {
            $this->data['paging_message']  = 'No Records Found';
        }*/
        $this->data['message'] = $this->session->flashdata('message');
        
        //breadcrumb 
        $this->breadcrumb->add('Dashboard', base_url());
        $this->breadcrumb->add('View Categories', '');
        $this->data['breadcrumb'] = $this->breadcrumb->output();
        //ends
        $this->smarty->assign('data', $this->data);
        $this->smarty->view('template.tpl'); 
    }

    function create()
    {
        //get all dropdowns
        $eStatuses = field_enums('categories','eStatus');

        //if form is posted
        if($this->input->post())
        {            
            $category = $this->input->post('data');            
            $iCategoryId = $this->category_model->add_category($category);
            //echo "<pre>";print_r($_FILES);exit;
            if($_FILES['vIcon']['name']!='')
            {
                $category['vIcon']=$_FILES['vIcon']['name'];
                $icon_uploaded = $this->do_uploadicon($iCategoryId);
                $category['vIcon'] = $icon_uploaded;
                $category['iCategoryId'] = $iCategoryId;
                $iCategoryId = $this->category_model->edit_category($category);
            }

            $this->session->set_flashdata('message',"Category added successfully");
            redirect($this->data['base_url'] . 'category');
            exit;
        }   
        //breadcrumb 
        $this->breadcrumb->add('Dashboard', base_url());
        $this->breadcrumb->add('View Categories', base_url()."category");
        $this->breadcrumb->add('Add Category', '');
        $this->data['breadcrumb'] = $this->breadcrumb->output();
        //ends

        //load template file
        $this->data['tpl_name']= "new-category.tpl";	

        //smarty assign variables
        $this->smarty->assign('data', $this->data);
        $this->smarty->assign('eStatuses', $eStatuses);

        $this->smarty->view('template.tpl'); 
    }
   
    function update()
    {
        //get all dropdowns
        $eStatuses = field_enums('categories','eStatus');

        $iCategoryId = $this->uri->segment(3);
        $this->data['category'] = $this->category_model ->get_category_details($iCategoryId);
        if($this->input->post())
        {
            $category = $this->input->post('data');            
            if(isset($_FILES) && $_FILES['vIcon']['name']!= "")
            {
                $category['vIcon']=$_FILES['vIcon']['name'];
                $icon_uploaded = $this->do_uploadicon($category['iCategoryId']);
                $category['vIcon'] = $icon_uploaded;
            }

            $iCategoryId = $this->category_model->edit_category($category);
            $this->session->set_flashdata('message',"Category updated successfully");
            redirect($this->data['base_url'] . 'category');
            exit;
        }   
        //breadcrumb 
        $this->breadcrumb->add('Dashboard', base_url());
        $this->breadcrumb->add('View Categories', base_url()."category");
        $this->breadcrumb->add('Edit Category', '');
        $this->data['breadcrumb'] = $this->breadcrumb->output();
        //ends

        //load template file
        $this->data['tpl_name']= "edit-category.tpl";  

        //smarty assign variables
        $this->smarty->assign('data', $this->data);
        $this->smarty->assign('eStatuses', $eStatuses);

        $this->smarty->view('template.tpl'); 
    }

    function action_update()
    {
        $ids = $this->input->post('iId'); 
        switch($this->input->post('action'))
        {
            case "Delete":
                    $upload_path = $this->config->item('base_path');                    
                    foreach ($ids as $row)
                    {
                        $data= $this->category_model->get_category_details($row);
                        unlink($upload_path.'uploads/'.'category_icons/'.$row.'/'.$data['vIcon']);
                        rmdir($upload_path.'uploads/'.'category_icons/'.$row);
                    }
                    $iId = $this->category_model->delete_all($ids);
                    $this->session->set_flashdata('message',"Total ".count($ids)." Record(s) Deleted successfully");
                    redirect($this->data['base_url'] . 'category');
                    exit;
                    break;
        }
    }


    
    function do_uploadicon($iconId)
    {
        if(!is_dir('uploads/category_icons/')){
            @mkdir('uploads/category_icons/', 0777);
        }
        if(!is_dir('uploads/category_icons/'.$iconId)){
            @mkdir('uploads/category_icons/'.$iconId, 0777);
        }
       
        $config = array(
          'allowed_types' => 'gif|GIF|JPG|jpg|JPEG|jpeg||PNG|png',
          'upload_path' => 'uploads/category_icons/'.$iconId,
          'file_name' => str_replace(' ','',$_FILES['vIcon']['name']),
          'max_size'=>5380334
        );
        
        $this->upload->initialize($config);
        $this->upload->do_upload('vIcon'); //do upload
        $icon_data = $this->upload->data(); //get icon data
        $icon_uploaded = $icon_data['file_name'];
       // echo $icon_uploaded ;exit;
        return $icon_uploaded;
    }

    function deleteicon()
    {
        $upload_path = $this->config->item('base_path');        
        $iCategoryId = $_REQUEST['id'];
        $data = $this->category_model->get_category_details($iCategoryId);
        $var=unlink($upload_path.'uploads/'.'category_icons/'.$iCategoryId.'/'.$data['vIcon']);
        $var1 = $this->category_model->delete_icon($iCategoryId);
        redirect($this->data['base_url'].'category/update/'.$iCategoryId);
    }
    
    function get_category_listing(){
        $all_category = $this->category_model->get_all_category();
        if(count($all_category) > 0){
            foreach ($all_category as $key => $value){
                $alldata[$key]['id'] = '<input type="checkbox" name="iId[]" id="iId" value="'.$value['iCategoryId'].'">';
                $alldata[$key]['categoryname'] = $value['vCategory'];
                $alldata[$key]['status'] = $value['eStatus'];
                $alldata[$key]['editlink'] = '<a href="'.$this->data['base_url'].'category/update/'.$value['iCategoryId'].'">Edit</a>';
            }        
            $aData['aaData'] =  $alldata;
        }
        else{
            $aData['aaData'] = '';
        }   
        $json_lang = json_encode($aData);
        echo $json_lang;exit;
    }
    
}
/* End of file category.php */
/* Location: ./application/controllers/category.php */